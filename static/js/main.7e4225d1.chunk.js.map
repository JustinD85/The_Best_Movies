{"version":3,"sources":["api/index.js","actions/index.js","components/Movie/Movie.js","components/Nav/Nav.js","components/View/View.js","components/CreateAccountPrompt/CreateAccountPrompt.js","containers/App/App.js","containers/Carousel/Carousel.js","containers/CreateUser/CreateUser.js","containers/Login/Login.js","containers/Profile/Profile.js","reducers/moviesReducer.js","reducers/index.js","reducers/userReducer.js","reducers/loginReducer.js","reducers/popupReducer.js","index.js"],"names":["dbUrl","options","method","data","headers","Content-Type","body","JSON","stringify","postData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","path","response","unfilteredData","wrap","_context","prev","next","fetch","concat","sent","ok","Error","json","abrupt","stop","this","_x","_x2","apply","arguments","deleteData","_ref2","_callee2","_context2","results","_x3","_x4","getData","_ref3","_callee3","_context3","_x5","getMovies","_ref4","_callee4","unfilteredMovies","_context4","setMovies","movies","type","setFavorites","favorites","user_id","setUser","user","setLoginPrompt","bool","setPopup","connect","state","dispatch","movie","isPopup","checkCanFavorite","pathToGetFav","pathToDeleteFav","id","isFavorite","t0","console","log","_class","react_default","createElement","className","react","Link","onClick","to","title","release_date","width","height","src","trailer","frameBorder","allow","allowFullScreen","overview","vote_average","poster_path","alt","Nav","NavLink","exact","activeStyle","color","name","View","findClickedCard","match","_this","props","find","parseInt","params","components_Movie_Movie","key","_this2","components_Nav_Nav","Route","component","Profile","render","location","containers_Carousel_Carousel","Component","CreateAccountPrompt","role","aria-label","App","_Component","_getPrototypeOf2","classCallCheck","_len","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","setUserFavorites","userID","retrieveFavPath","componentDidMount","localStorage","getItem","setItem","parse","inherits","createClass","value","_this$props","canPopup","Login","containers_CreateUser_CreateUser","components_CreateAccountPrompt_CreateAccountPrompt","components_View_View","withRouter","shouldPromptLogin","movieCards","map","favMovieCards","filter","movieCard","hasNoFavs","Switch","CreateUser","handleChange","e","_e$target","target","setState","defineProperty","handleSubmit","_this$state","email","password","preventDefault","didPost","error","_this$state2","Redirect","onSubmit","placeholder","required","onChange","canLogin","logout","t1","removeItem","t2","toUpperCase","defaultState","rootReducer","combineReducers","undefined","action","favID","movie_id","toConsumableArray","objectSpread","forEach","favorite","devTools","window","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","provider","es","BrowserRouter","containers_App_App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e4225d1.chunk.js","sourcesContent":["import apiKey from './movie_api_key'\n\n// const dbUrl = 'http://localhost:3000/api/'\nconst dbUrl = 'https://falsemotive.io/api/'\nconst moviesUrl = 'https://api.themoviedb.org/3/movie/'\nexport const options = (method, data) => ({\n  method,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data)\n})\n\nexport const postData = async (path, data) => {\n  const response = await fetch(`${dbUrl}${path}`, options('POST', data))\n  if (!response.ok) throw new Error(`Could not post`)\n  const unfilteredData = await response.json()\n  return unfilteredData.data\n}\n\nexport const deleteData = async (path, data) => {\n  const response = await fetch(`${dbUrl}${path}`, options('DELETE', data))\n  if (!response.ok) throw new Error(`Could not delete`)\n  const unfilteredData = await response.json()\n  return unfilteredData.results\n}\n\nexport const getData = async (path) => {\n  const response = await fetch(`${dbUrl}${path}`)\n  if (!response.ok) throw new Error(`Could not get Data`)\n  const unfilteredData = await response.json()\n  return unfilteredData.data\n}\n\nexport const getMovies = async () => {\n  const response = await fetch(`https://falsemotive.io/newKey`)\n  const unfilteredMovies = await response.json()\n  return unfilteredMovies\n}","// Movie key\nexport const toggleFavorite = (id) => ({\n  type: 'TOGGLE_FAVORITE',\n  id,\n})\n\nexport const setMovies = (movies) => ({\n  type: 'SET_MOVIES',\n  movies,\n})\n\nexport const setFavorites = (favorites, user_id) => ({\n  type: 'SET_FAVORITES',\n  favorites,\n  user_id\n})\n\n// User key \nexport const setUser = (user) => ({\n  type: 'SET_USER',\n  user,\n})\n\n// Login key\nexport const setLoginPrompt = (bool) => ({\n  type: 'SET_LOGIN_PROMPT',\n  bool,\n})\n\n// isPopup key\nexport const setPopup = (bool) => ({\n  type: 'SET_POPUP',\n  bool\n})","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { postData, getData, deleteData } from '../../api'\nimport { setLoginPrompt, setFavorites, setPopup } from '../../actions'\nimport { connect } from 'react-redux'\nimport './Movie.scss'\n\nexport const Movie = (\n  {\n    movie, user, setLoginPrompt, setFavorites, isPopup, setPopup\n  }\n) => {\n  const imgUrl = 'https://image.tmdb.org/t/p/w500'\n  const checkCanFavorite = async () => {\n    await setLoginPrompt(!user)\n    if (user) {\n      const pathToAddFav = '/users/favorites/new'\n      const pathToGetFav = `users/${user.id}/favorites`\n      const pathToDeleteFav = `${pathToGetFav}/${movie.id}`\n      try {\n        !movie.isFavorite ?\n          await postData(pathToAddFav, movie) :\n          await deleteData(pathToDeleteFav, movie)\n        const favorites = await getData(pathToGetFav)\n        setFavorites(favorites, user.id)\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n  const getImage = () => {\n    return <Link to={`/movies/${movie.id}`}  >\n      <img\n        onClick={() => setPopup(true)}\n        src={imgUrl + movie.poster_path}\n        className='movie-poster'\n        alt='movie poster'></img>\n    </Link>\n  }\n  const getTrailer = () => {\n    return <iframe width=\"560\" height=\"315\" title={movie.title}\n      src={`https://www.youtube.com/embed/${movie.trailer}`}\n      frameBorder=\"0\" allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n      allowFullScreen></iframe>\n  }\n  const _class = isPopup ? 'popup' : 'Movie'\n\n  return (\n    <div className={_class} >\n      {isPopup && <Fragment>\n        <Link className='close-popup' onClick={() => setPopup(false)} to='/'>X</Link>\n        <h1 className='movie-title'>{movie.title}</h1>\n        <hr/>\n        <p className='movie-release'>Released: {movie.release_date}</p>\n        <hr/>\n        {getTrailer()}\n        <hr/>\n        <p className='movie-description'>{movie.overview}</p>\n        <hr/>\n        <p className='movie-vote'>Average rating: {movie.vote_average}</p>\n      </Fragment>}\n\n      {!isPopup && getImage()}\n      <span className='favorite-btn' onClick={() => checkCanFavorite()}>{movie.isFavorite ? '⭐️' : '☆'}</span>\n\n    </div>\n  )\n}\nconst mapStateToProps = (state) => ({\n  user: state.user,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setFavorites: (favorites, user_id) => dispatch(setFavorites(favorites, user_id)),\n  setLoginPrompt: (bool) => dispatch(setLoginPrompt(bool)),\n  setPopup: (bool) => dispatch(setPopup(bool)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie)","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport './Nav.scss'\n\nconst Nav = () => {\n  return (\n    <nav className='Nav'>\n      <h1 className='movie-tracker-title'>Movie <span>Tracker</span></h1>\n      <div className='nav-border'>\n        <div className='nav-options'>\n          <p className='browse'>SORT BY:</p>\n          <NavLink exact to='/' activeStyle={{ color: '#0CD0FC' }} name='recent'>RECENT</NavLink>\n          <NavLink exact to='/favorites' activeStyle={{ color: '#0CD0FC' }} name='favorites'>FAVORITES</NavLink>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default Nav","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport { Profile, Carousel } from '../../containers'\nimport { Movie } from '../../components'\nimport { Nav } from '../'\nimport './View.scss'\n\nclass View extends Component {\n  \n  findClickedCard = (match) => {\n    const { movies } = this.props\n    const movie = movies.find(movie => parseInt(movie.id) === parseInt(match.params.id))\n    if (!movie) return <div> Movie does not exist</div>\n    return <Movie key={JSON.stringify(movie)} movie={movie} isPopup={true} />\n  }\n  \n  render() {\n    return (\n      <div className=\"Home\">\n        <Nav />\n        <section className='View'>\n          <Route path='/' component={Profile} />\n          <Route path='/' render={({ location }) => <Carousel location={location} />} />\n          <Route path='/movies/:id' render={({ match }) => this.findClickedCard(match)} />\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default View","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './CreateAccountPrompt.scss'\n\nconst CreateAccountPrompt = (props) => {\n  const { setLoginPrompt, setPopup } = props;\n  setPopup(true)\n\n  return <div className='CreateAccountPrompt'>\n    <p className='create-account-prompt'>In order to <span role='img' aria-label='star emoji'>⭐</span> your favorite movies, you need an account. Would you like to create one?</p>\n    <hr/>\n    <Link to='/create-user' onClick={() => setLoginPrompt(false)}>YES</Link>\n    <button className='no-btn' onClick={() => { setLoginPrompt(false); setPopup(false) }}>NO</button>\n    <hr/>    \n    <p className='account-notice'>(If you already have an account, you can login from the home page!)</p>\n  </div >\n}\n\nexport default CreateAccountPrompt","import React, { Component } from 'react'\nimport { Route, withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { getMovies, getData } from '../../api/'\nimport { setMovies, setLoginPrompt, setPopup, setUser, setFavorites } from '../../actions'\nimport { View, CreateAccountPrompt } from '../../components/'\nimport { Login, CreateUser } from '../../containers/'\nimport PropTypes from 'prop-types'\nimport '../../styles/main.scss'\n\nexport class App extends Component {\n\n  setUserFavorites = async (userID) => {\n    const retrieveFavPath = `users/${userID}/favorites`\n    const favorites = await getData(retrieveFavPath)\n    this.props.setFavorites(favorites, userID)\n    this.props.setPopup(false)\n  }\n\n  componentDidMount = async () => {\n    let movies = []\n    if (!localStorage.getItem('movies')) {\n      movies = await getMovies('now_playing')\n      localStorage.setItem('movies', JSON.stringify(movies))\n    } else {\n      movies = JSON.parse(localStorage.getItem('movies'))\n    }\n    localStorage.setItem('test', JSON.stringify('you got it'))\n\n    this.props.setMovies(movies)\n  }\n\n  render() {\n    const { canPopup, setPopup, setLoginPrompt } = this.props\n    return (\n      <div className=\"App\">\n        <Route path='/login' component={Login} />\n        <Route path='/create-user' render={() => <CreateUser setPopup={setPopup} />} />\n        <Route path='/' render={() => canPopup && <CreateAccountPrompt\n          setPopup={setPopup}\n          setLoginPrompt={setLoginPrompt} />} />\n        <Route path='/' render={() => <View movies={this.props.movies} />} />\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n  canPopup: state.shouldPromptLogin,\n  user: state.user\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setMovies: (movies) => dispatch(setMovies(movies)),\n  setUser: (user) => dispatch(setUser(user)),\n  setLoginPrompt: (bool) => dispatch(setLoginPrompt(bool)),\n  setPopup: (bool) => dispatch(setPopup(bool)),\n  setFavorites: (favorites, user_id) => dispatch(setFavorites(favorites, user_id)),\n\n})\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App))\n\nApp.propTypes = {\n  movies: PropTypes.array,\n  canPopup: PropTypes.bool,\n  user: PropTypes.object,\n  setMovies: PropTypes.func,\n  setLoginPrompt: PropTypes.func,\n  setPopup: PropTypes.func,\n}","import React, { Fragment } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { Movie } from '../../components/'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport './Carousel.scss'\n\nexport const Carousel = ({ movies, isPopup }) => {\n  const movieCards = movies.map(movie => (\n    <Movie\n      key={JSON.stringify(movie)}\n      movie={movie} />))\n  const favMovieCards = movieCards.filter(movieCard => movieCard.props.movie.isFavorite)\n  const hasNoFavs = !favMovieCards.length && <h1 className='no-faves-notice'>You have no favorites... yet!</h1>\n  const _class = isPopup ? 'Carousel blur' : 'Carousel'\n\n  return (\n    <Fragment>\n      <section className={_class}>\n        <Switch>\n          <Route path='/favorites' render={() => (\n            <Fragment>\n              <h2 className='favorites-title'>Favorite Movies</h2>\n              <div className='movies-container'>{(hasNoFavs || favMovieCards)}</div>\n            </Fragment>)} />\n\n          <Route path='/' render={() => (\n            <Fragment>\n              <h2 className='recents-title'>Recent Movies</h2>\n              <div className='movies-container'>{movieCards}</div>\n            </Fragment>)} />\n        </Switch>\n      </section>\n    </Fragment>\n  )\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.movies,\n  isPopup: state.isPopup\n})\n\nexport default connect(mapStateToProps)(Carousel)\n\nCarousel.propTypes = {\n  movies: PropTypes.array,\n  isPopup: PropTypes.bool,\n}","import React, { Component } from 'react'\nimport { Redirect, Link } from 'react-router-dom'\nimport { postData } from '../../api'\nimport PropTypes from 'prop-types'\nimport './CreateUser.scss'\n\nclass CreateUser extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      didPost: false,\n      error: ''\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    const { name, email, password } = this.state;\n    const user = { name, email, password };\n\n    try {\n      await postData('users/new', user)\n      this.setState({\n        didPost: true\n      })\n    } catch (error) {\n      this.setState({\n        error: 'User already exists'\n      })\n    }\n  }\n  componentDidMount = () => this.props.setPopup(true)\n  render() {\n    const { didPost, error } = this.state\n    return (\n      didPost ?\n        <Redirect to='/login' /> :\n        <div className='CreateUser'>\n          <form onSubmit={this.handleSubmit}>\n            <h1 className='create-your-account'>Create Your Account</h1>\n            <input\n              className='user-input'\n              placeholder='Name'\n              required type='text'\n              onChange={this.handleChange}\n              name='name' />\n            <input\n              className='user-input'\n              placeholder='Email'\n              required type='email'\n              onChange={this.handleChange}\n              name='email' />\n            <input\n              className='user-input'\n              placeholder='Password'\n              required type='password'\n              onChange={this.handleChange}\n              name='password' />\n            <button\n              className='submit-user'\n              type='submit'\n            >Submit\n              </button>\n            <Link to='/' onClick={() => this.props.setPopup(false)}>Back</Link>\n            {error && <h3>{error}</h3>}\n          </form>\n\n        </div>\n    )\n  }\n}\n\nexport default CreateUser;\n\nCreateUser.propTypes = {\n  setPopup: PropTypes.func,\n}","import React, { Component } from 'react'\nimport { NavLink, Redirect, Link } from 'react-router-dom'\nimport { postData, getData } from '../../api'\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\nimport { setMovies, setUser, setFavorites, setLoginPrompt, setPopup } from '../../actions'\nimport './Login.scss'\n\nexport class Login extends Component {\n  constructor() {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      error: '',\n      canLogin: false,\n    }\n  }\n\n  handleChange = (e) => {\n    const { name, value } = e.target;\n    this.setState({\n      [name]: value,\n    })\n  }\n\n  setUser = async () => {\n    const { password, email } = this.state\n    const data = await postData('users', { password, email })\n    const { name, id } = data\n    localStorage.setItem('users', JSON.stringify({ name, id }))\n    this.props.setUser({ name, id })\n    return id;\n  }\n\n  setUserFavorites = async (userID) => {\n    const retrieveFavPath = `users/${userID}/favorites`\n    const favorites = await getData(retrieveFavPath)\n    this.props.setFavorites(favorites, userID)\n  }\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const userID = await this.setUser()\n      this.setUserFavorites(userID)\n      this.setState({ canLogin: true })\n      this.props.setPopup(false)\n    } catch (error) {\n      this.setState({\n        error: 'That email or password does not exist'\n      })\n\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.setPopup(true)\n    this.props.setLoginPrompt(false)\n  }\n\n  render() {\n    const { canLogin, error } = this.state\n\n    return (\n      canLogin ? <Redirect to='/' /> :\n        <form className='Login' onSubmit={this.handleSubmit}>\n          <h1>Movie Tracker</h1>\n          <h3>Welcome back!</h3>\n          <input\n            className='user-input'\n            placeholder='Email'\n            required type='email'\n            onChange={this.handleChange}\n            name='email' />\n          <input\n            className='user-input'\n            placeholder='Password'\n            required type='password'\n            onChange={this.handleChange}\n            name='password' />\n          {error && <h3>{error}</h3>}\n          <button className='sign-in link'>Sign In</button>\n          <p>New to Movie Tracker?</p>\n          <NavLink className='create-user link' to='/create-user'>Create Account</NavLink>\n          <Link className='back-btn' to='/' onClick={() => this.props.setPopup(false)}>Go Back</Link>\n        </form>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  movies: state.movies,\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setMovies: (movies) => dispatch(setMovies(movies)),\n  setUser: (user) => dispatch(setUser(user)),\n  setFavorites: (favorites, user_id) => dispatch(setFavorites(favorites, user_id)),\n  setLoginPrompt: (bool) => dispatch(setLoginPrompt(bool)),\n  setPopup: (bool) => dispatch(setPopup(bool)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n\nLogin.propTypes = {\n  setLoginPrompt: PropTypes.func,\n  setPopup: PropTypes.func,\n  setFavorites: PropTypes.func,\n  setUser: PropTypes.func,\n}","import React, { Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { setUser, setMovies, setPopup } from '../../actions'\nimport { getMovies } from '../../api/'\nimport PropTypes from 'prop-types'\nimport './Profile.scss'\n\nexport const Profile = ({ user, setUser, setMovies, setPopup }) => {\n  const logout = async () => {\n    setUser(null)\n    try {\n      setMovies(await getMovies('now_playing'))\n      localStorage.removeItem('users')\n    } catch (error) {\n      console.log('Error fetching data')\n    }\n  }\n\n  return (\n    <Fragment>\n      {!user ?\n        <div className='Profile'>\n          <Link to='/login' className='login-link' onClick={() => setPopup(true)} >SIGN IN</Link>\n        </div>\n        :\n        <div className='Profile'>\n          <p className='user-name'>{user.name.toUpperCase()}</p>\n          <button className='logout-btn' onClick={() => logout()}>SIGN OUT</button>\n        </div>}\n    </Fragment>\n  )\n}\n\nexport const mapStateToProps = (state) => ({\n  user: state.user\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setUser: (user) => dispatch(setUser(user)),\n  setMovies: (movies) => dispatch(setMovies(movies)),\n  setPopup: (bool) => dispatch(setPopup(bool)),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Profile);\n\nProfile.propTypes = {\n  setUser: PropTypes.func,\n  setMovies: PropTypes.func,\n  setPopup: PropTypes.func,\n  user: PropTypes.object,\n}","const defaultState = []\n\nexport const moviesReducer = (state = defaultState, action) => {\n  const { type, id: favID } = action\n  switch (type) {\n    case 'SET_MOVIES':\n      return action.movies.map(movie => {\n        movie.movie_id = movie.id\n        return movie\n      })\n    case 'TOGGLE_FAVORITE':\n      return [...state].map(movie => (\n        movie.id === favID ?\n          { ...movie, isFavorite: !movie.isFavorite }\n          :\n          movie\n      ))\n    case 'SET_FAVORITES':\n      return [...state].map(movie => {\n        movie.isFavorite = false;\n        movie.user_id = action.user_id\n\n        action.favorites.forEach(favorite => {\n          if (favorite.movie_id === movie.movie_id) {\n            movie.isFavorite = true\n          }\n        })\n        return movie;\n      })\n    default:\n      return state\n  }\n}","import { combineReducers } from 'redux'\nimport { moviesReducer } from './moviesReducer'\nimport { userReducer } from './userReducer'\nimport { loginPromptReducer } from './loginReducer'\nimport { popupReducer } from './popupReducer'\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  user: userReducer,\n  shouldPromptLogin: loginPromptReducer,\n  isPopup: popupReducer\n})\n\nexport default rootReducer;","const defaultState = null\n\nexport const userReducer = (state = defaultState, action) => {\n  switch (action.type) {\n  case 'SET_USER':\n    return action.user\n  default:\n    return state;\n  }\n}\n","const defaultState = false\n\nexport const loginPromptReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_LOGIN_PROMPT':\n      return action.bool\n    default:\n      return state\n  }\n}\n","const defaultState = false\n\nexport const popupReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SET_POPUP':\n      return action.bool\n    default:\n      return state\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport { App } from './containers'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport rootReducer from './reducers'\n\n\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\nconst store = createStore(rootReducer, devTools)\nconst provider = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(provider, document.getElementById('root'))\n"],"sourceRoot":""}